version: "3.9"
services:
  config-server:
    container_name: config-server
    image: config-server:lts
    ports:
      - 7777:7777
    command: 'agent -server -bootstrap-expect=1 -ui -bind=0.0.0.0 -client=0.0.0.0'
    networks:
      - ecommerce-net
  discovery-service:
    container_name: discovery-service
    image: discovery-service:lts
    ports:
      - 8761:8761
    depends_on:
      config-server:
        condition: service_healthy
    links:
      - config-server
  gateway-service:
    container_name: gateway-service
    image: gateway-service:lts
    ports:
      - 8888:8888
    depends_on:
      discovery-service:
        condition: service_healthy
    links:
      - config-server
      - discovery-service
      - customer-service
    networks:
      - ecommerce-net
  ecommerce-db:
    container_name: ecommerce-db
    image: mysql:8.0.29
    restart: always
    environment:
      - MYSQL_ROOT_USERNAME=root
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=ecommerce_db
    ports:
      - "3306:3306"
    links:
      - config-server
    volumes:
      - $HOME/Projects/docker/mysql/data:/data/db
      - $HOME/Projects/docker/mysql/logs:/logs
      - $HOME/Projects/docker/mysql/tmp:/tmp
    networks:
      - ecommerce-net
  customer-service:
    container_name: customer-service
    image: customer-service:lts
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    restart: on-failure
    networks:
      - ecommerce-net
    depends_on:
      - config-server
      - discovery-service
      - ecommerce-db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/${MYSQL_DATABASE}
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
networks:
  ecommerce-net:
    driver: bridge